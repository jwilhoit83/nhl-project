{"version":3,"sources":["Components/Navbar.js","Components/PositionTabs.js","Components/StatsTable.js","Components/StandingsTabs.js","Components/NHLStandings.js","Components/DivisionalStandings.js","Components/TeamStandings.js","Components/Schedule.js","App.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","title","appbarStyles","backgroundColor","color","marginBottom","menuListStyles","Navbar","classes","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","position","Toolbar","Typography","variant","Hidden","smDown","to","Button","mdUp","IconButton","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","component","Link","PositionTabs","value","setValue","tabBar","tab","fontWeight","outline","Tabs","onChange","newValue","scrollButtons","indicatorColor","Tab","label","StatsTable","apiToken","players","setPlayers","isLoading","setIsLoading","React","page","setPage","rowsPerPage","setRowsPerPage","statsURL","statsSorting","e","sortedArr","slice","sort","player","a","b","lastName","localeCompare","team","abbreviation","pos","primaryPosition","gp","stats","gamesPlayed","p","scoring","points","g","goals","assists","pa","primaryAssists","ppg","powerplayGoals","ppp","powerplayPoints","shg","shorthandedGoals","shp","shorthandedPoints","otg","overtimeGoals","pim","penalties","penaltyMinutes","s","skating","shots","h","hits","toi","shifts","timeOnIceSeconds","blk","blockedShots","sv","goaltending","saves","gaa","goalsAgainstAverage","savePercentage","gs","gamesStarted","w","wins","l","losses","so","shutouts","ga","goalsAgainst","target","innerText","toLowerCase","playerMap","map","fullName","firstName","injury","currentInjury","playingProbability","Math","random","name","injuryDescription","description","toUpperCase","timeOnIcePerGame","toiConverter","toFixed","process","API_KEY","useEffect","axios","get","headers","Authorization","btoa","statsRes","data","playerStatsTotals","getData","stickyCol","minWidth","maxWidth","left","whiteSpace","overflow","zIndex","colHeadings","cursor","colStyles","stickyColHeader","chipStyles","marginLeft","paddingTop","fontSize","height","standingsHeaders","Container","style","display","justifyContent","CircularProgress","Paper","elevation","then","res","TableContainer","maxHeight","width","Table","size","stickyHeader","TableHead","TableRow","TableCell","TableBody","rowStyles","Chip","TablePagination","labelRowsPerPage","rowsPerPageOptions","colSpan","count","length","SelectProps","inputProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","TablePaginationActions","sec","minutes","floor","seconds","mdDown","disabled","aria-label","ceil","max","StandingsTabs","NHLStandings","standings","standingsRows","alignItems","alt","src","officialLogoImageSrc","city","overtimeLosses","pointsPercent","overtimeWins","shootoutWins","miscellaneous","goalsFor","shootoutLosses","DivisionalStandings","divisionTables","division","divisionRank","divisionName","TeamStandings","allStandings","setAllStandings","divisionalStandings","setDivisionalStandings","teams","overallRank","rank","westArr","filter","item","eastArr","northArr","centralArr","path","Schedule","schedule","setSchedule","setTeams","formatDate","setNewDate","Date","now","schedDate","setSchedDate","displayDate","setDisplayDate","scheduleURL","teamsRes","schedRes","games","console","log","gamesList","game","homeIdx","findIndex","homeTeam","awayIdx","awayTeam","gameID","gameTime","startTime","toString","homeTeamCity","homeTeamName","homeLogo","homeScore","score","homeScoreTotal","homeShots","homeShotsTotal","awayTeamCity","awayTeamName","awayLogo","awayScore","awayScoreTotal","awayShots","awayShotsTotal","currentPeriod","currentIntermission","currentPeriodTimeRemaining","secondsConverter","currentPeriodSecondsRemaining","playedStatus","scheduleStatus","delayedOrPostponedReason","paper","Grid","container","justify","spacing","ButtonBase","image","img","xs","sm","alignContent","direction","toDateString","toLocaleTimeString","noValidate","TextField","type","InputLabelProps","shrink","Number","date","tzOffset","getTimezoneOffset","toISOString","replace","margin","padding","textAlign","App","theme","createMuiTheme","palette","secondary","main","yellow","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.8d8b306e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appbarStyles: {\r\n    backgroundColor: \"#414141\",\r\n    color: \"#FBC02D\",\r\n    marginBottom: \"25px\",\r\n  },\r\n  menuListStyles: {\r\n    color: \"#FBC02D\",\r\n  },\r\n}));\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar className={classes.appbarStyles} position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Jrod's Hockey Project\r\n          </Typography>\r\n          <Hidden smDown>\r\n            <Link to=\"/stats\">\r\n              <Button color=\"secondary\">Player Stats</Button>\r\n            </Link>\r\n            <Link to=\"/standings/nhl\">\r\n              <Button color=\"secondary\">Team Standings</Button>\r\n            </Link>\r\n            <Link to=\"/schedule\">\r\n              <Button color=\"secondary\">Schedule</Button>\r\n            </Link>\r\n          </Hidden>\r\n          <Hidden mdUp>\r\n            <IconButton\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              <MenuIcon color=\"secondary\" />\r\n            </IconButton>\r\n          </Hidden>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem\r\n              className={classes.menuListStyles}\r\n              component={Link}\r\n              to=\"/stats\"\r\n              onClick={handleClose}\r\n            >\r\n              Player Stats\r\n            </MenuItem>\r\n            <MenuItem\r\n              className={classes.menuListStyles}\r\n              component={Link}\r\n              to=\"/standings/nhl\"\r\n              onClick={handleClose}\r\n            >\r\n              Team Standings\r\n            </MenuItem>\r\n            <MenuItem\r\n              className={classes.menuListStyles}\r\n              component={Link}\r\n              to=\"/schedule\"\r\n              onClick={handleClose}\r\n            >\r\n              Schedule\r\n            </MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nexport default function PositionTabs({ onClick }) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    tabBar: {\r\n      backgroundColor: \"#424242\",\r\n    },\r\n    tab: {\r\n      fontWeight: 600,\r\n      color: \"#eeeeee\",\r\n      \"&:focus\": { outline: 0 },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Tabs\r\n      value={value}\r\n      onChange={handleChange}\r\n      className={classes.tabBar}\r\n      variant='scrollable'\r\n      scrollButtons='on'\r\n      indicatorColor='secondary'\r\n    >\r\n      <Tab className={classes.tab} title=\"All Players\" onClick={onClick} label=\"ALL\" />\r\n      <Tab className={classes.tab} title=\"Skaters\" onClick={onClick} label=\"SK\" />\r\n      <Tab className={classes.tab} title=\"Goalies\" onClick={onClick} label=\"G\" />\r\n      <Tab className={classes.tab} title=\"Centers\" onClick={onClick} label=\"C\" />\r\n      <Tab className={classes.tab} title=\"Left Wingers\" onClick={onClick} label=\"LW\" />\r\n      <Tab className={classes.tab} title=\"Right Wingers\" onClick={onClick} label=\"RW\" />\r\n      <Tab className={classes.tab} title=\"Defensemen\" onClick={onClick} label=\"D\" />\r\n    </Tabs>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PositionTabs from \"./PositionTabs\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\n\r\n\r\n\r\nexport default function StatsTable() {\r\n  const [players, setPlayers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\r\n  \r\n  const statsURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/player_stats_totals.json\";\r\n  let apiToken;\r\n  \r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    apiToken = process.env.REACT_APP_API_KEY;\r\n  } else {\r\n    apiToken = process.env.API_KEY;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const statsRes = await axios.get(statsURL, {\r\n        headers: {\r\n          Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n        },\r\n      });\r\n\r\n      setPlayers(statsRes.data.playerStatsTotals);\r\n      setIsLoading(false);\r\n    };\r\n    getData();\r\n  }, [apiToken]);\r\n\r\n  function statsSorting(e) {\r\n    const sortingLegend = {\r\n      player: (a, b) => a.player.lastName.localeCompare(b.player.lastName),\r\n      team: (a, b) => a.team.abbreviation.localeCompare(b.team.abbreviation),\r\n      pos: (a, b) => a.player.primaryPosition.localeCompare(b.player.primaryPosition),\r\n      gp: (a, b) => b.stats.gamesPlayed - a.stats.gamesPlayed,\r\n      p: (a, b) => b.stats.scoring.points - a.stats.scoring.points,\r\n      g: (a, b) => b.stats.scoring.goals - a.stats.scoring.goals,\r\n      a: (a, b) => b.stats.scoring.assists - a.stats.scoring.assists,\r\n      pa: (a, b) => b.stats.scoring.primaryAssists - a.stats.scoring.primaryAssists,\r\n      ppg: (a, b) => b.stats.scoring.powerplayGoals - a.stats.scoring.powerplayGoals,\r\n      ppp: (a, b) => b.stats.scoring.powerplayPoints - a.stats.scoring.powerplayPoints,\r\n      shg: (a, b) => b.stats.scoring.shorthandedGoals - a.stats.scoring.shorthandedGoals,\r\n      shp: (a, b) => b.stats.scoring.shorthandedPoints - a.stats.scoring.shorthandedPoints,\r\n      otg: (a, b) => b.stats.scoring.overtimeGoals - a.stats.scoring.overtimeGoals,\r\n      pim: (a, b) => b.stats.penalties.penaltyMinutes - a.stats.penalties.penaltyMinutes,\r\n      s: (a, b) => (b.stats.skating ? b.stats.skating.shots : -1) - (a.stats.skating ? a.stats.skating.shots : -1),\r\n      h: (a, b) => (b.stats.skating ? b.stats.skating.hits : -1) - (a.stats.skating ? a.stats.skating.hits : -1),\r\n      toi: (a, b) => b.stats.shifts.timeOnIceSeconds / b.stats.gamesPlayed - a.stats.shifts.timeOnIceSeconds / a.stats.gamesPlayed,\r\n      blk: (a, b) => (b.stats.skating ? b.stats.skating.blockedShots : -1) - (a.stats.skating ? a.stats.skating.blockedShots : -1),\r\n      sv: (a, b) => (b.stats.goaltending ? b.stats.goaltending.saves : -1) - (a.stats.goaltending ? a.stats.goaltending.saves : -1),\r\n      gaa: (a, b) =>\r\n        (a.stats.goaltending && a.stats.goaltending.saves !== 0 ? a.stats.goaltending.goalsAgainstAverage : 50) -\r\n        (b.stats.goaltending && b.stats.goaltending.saves !== 0 ? b.stats.goaltending.goalsAgainstAverage : 50),\r\n      \"sv%\": (a, b) =>\r\n        (b.stats.goaltending ? b.stats.goaltending.savePercentage : -1) - (a.stats.goaltending ? a.stats.goaltending.savePercentage : -1),\r\n      gs: (a, b) => (b.stats.goaltending ? b.stats.goaltending.gamesStarted : -1) - (a.stats.goaltending ? a.stats.goaltending.gamesStarted : -1),\r\n      w: (a, b) => (b.stats.goaltending ? b.stats.goaltending.wins : -1) - (a.stats.goaltending ? a.stats.goaltending.wins : -1),\r\n      l: (a, b) => (b.stats.goaltending ? b.stats.goaltending.losses : -1) - (a.stats.goaltending ? a.stats.goaltending.losses : -1),\r\n      so: (a, b) => (b.stats.goaltending ? b.stats.goaltending.shutouts : -1) - (a.stats.goaltending ? a.stats.goaltending.shutouts : -1),\r\n      ga: (a, b) =>\r\n        (a.stats.goaltending && a.stats.goaltending.saves !== 0 ? a.stats.goaltending.goalsAgainst : 50) -\r\n        (b.stats.goaltending && b.stats.goaltending.saves !== 0 ? b.stats.goaltending.goalsAgainst : 50),\r\n    };\r\n\r\n    let sortedArr = players.slice();\r\n\r\n    setPlayers(sortedArr.sort(sortingLegend[e.target.innerText.toLowerCase()]));\r\n  }\r\n\r\n  function positionFilter(e) {\r\n    if (e.target.innerText === \"ALL\") {\r\n      axios\r\n        .get(statsURL, {\r\n          headers: {\r\n            Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setPlayers(res.data.playerStatsTotals);\r\n        });\r\n    } else if (e.target.innerText === \"SK\") {\r\n      axios\r\n        .get(`${statsURL}?position=c,lw,rw,d`, {\r\n          headers: {\r\n            Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setPlayers(res.data.playerStatsTotals);\r\n        });\r\n    } else {\r\n      axios\r\n        .get(`${statsURL}?position=${e.target.innerText}`, {\r\n          headers: {\r\n            Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setPlayers(res.data.playerStatsTotals);\r\n        });\r\n    }\r\n  }\r\n\r\n  function playerMap(players) {\r\n    let newPlayers = players.map((player) => {\r\n      let fullName = player.player.firstName + \" \" + player.player.lastName;\r\n      let injury = player.player.currentInjury ? player.player.currentInjury.playingProbability.slice(0, 5) : \"\";\r\n      let scoring = player.stats.scoring;\r\n      let skating = player.stats.skating;\r\n      let goaltending = player.stats.goaltending;\r\n      return {\r\n        id: player.player.id * Math.random(),\r\n        name: fullName,\r\n        injury: injury,\r\n        injuryDescription: injury ? player.player.currentInjury.description.toUpperCase() : \"\",\r\n        team: player.team.abbreviation,\r\n        position: player.player.primaryPosition,\r\n        gamesPlayed: player.stats.gamesPlayed,\r\n        points: scoring.points,\r\n        goals: scoring.goals,\r\n        assists: scoring.assists,\r\n        primaryAssists: scoring.primaryAssists,\r\n        powerplayGoals: scoring.powerplayGoals,\r\n        powerplayPoints: scoring.powerplayPoints,\r\n        shorthandedGoals: scoring.shorthandedGoals,\r\n        shorthandedPoints: scoring.shorthandedPoints,\r\n        overtimeGoals: scoring.overtimeGoals,\r\n        shots: skating ? skating.shots : \"\",\r\n        hits: skating ? skating.hits : \"\",\r\n        timeOnIcePerGame: toiConverter(player),\r\n        penaltyMinutes: player.stats.penalties.penaltyMinutes,\r\n        blockedShots: skating ? skating.blockedShots : \"\",\r\n        saves: goaltending ? goaltending.saves : \"\",\r\n        goalsAgainst: goaltending ? goaltending.goalsAgainst : \"\",\r\n        goalsAgainstAverage: goaltending ? goaltending.goalsAgainstAverage.toFixed(3) : \"\",\r\n        savePercentage: goaltending ? goaltending.savePercentage.toFixed(3) : \"\",\r\n        gamesStarted: goaltending ? goaltending.gamesStarted : \"\",\r\n        wins: goaltending ? goaltending.wins : \"\",\r\n        losses: goaltending ? goaltending.losses : \"\",\r\n        shutouts: goaltending ? goaltending.shutouts : \"\",\r\n      };\r\n    });\r\n    return newPlayers;\r\n  }\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    stickyCol: {\r\n      minWidth: \"100px\",\r\n      maxWidth: \"50vw\",\r\n      left: 0,\r\n      whiteSpace: \"nowrap\",\r\n      overflow: \"hidden\",\r\n      position: \"sticky\",\r\n      zIndex: 5,\r\n      backgroundColor: \"#424242\",\r\n      color: \"#eeeeee\",\r\n    },\r\n    colHeadings: {\r\n      cursor: \"pointer\",\r\n      color: \"#FBC02D\",\r\n    },\r\n    colStyles: {\r\n      backgroundColor: \"#616161\",\r\n      color: \"#eeeeee\",\r\n    },\r\n    stickyColHeader: {\r\n      left: 0,\r\n      zIndex: 6,\r\n      color: \"#FBC02D\",\r\n      cursor: \"pointer\",\r\n    },\r\n    chipStyles: {\r\n      marginLeft: 5,\r\n      paddingTop: 1,\r\n      fontSize: 10,\r\n      fontWeight: 600,\r\n      height: 15,\r\n    },\r\n    standingsHeaders: {\r\n      color: \"#FBC02D\",\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      ) : (\r\n        <Paper elevation={3}>\r\n          <PositionTabs onClick={positionFilter} />\r\n          <TableContainer style={{ maxHeight: \"80vh\", width: \"100%\" }}>\r\n            <Table size=\"small\" stickyHeader>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell onClick={statsSorting} title=\"Name\" className={classes.stickyColHeader}>\r\n                    Player\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Team\">\r\n                    Team\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Position\">\r\n                    Pos\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Games Played\">\r\n                    GP\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Points\">\r\n                    P\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Goals\">\r\n                    G\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Assists\">\r\n                    A\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Primary Assists\">\r\n                    PA\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Powerplay Goals\">\r\n                    PPG\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Powerplay Points\">\r\n                    PPP\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Shorthanded Goals\">\r\n                    SHG\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Shorthanded Points\">\r\n                    SHP\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Overtime Goals\">\r\n                    OTG\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Shots\">\r\n                    S\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Hits\">\r\n                    H\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Time on Ice/Game\">\r\n                    TOI\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Penalty Minutes\">\r\n                    PIM\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Blocked Shots\">\r\n                    BLK\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Saves\">\r\n                    SV\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Goals Against\">\r\n                    GA\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Goals Against Average\">\r\n                    GAA\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Save Percentage\">\r\n                    SV%\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Games Started\">\r\n                    GS\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Wins\">\r\n                    W\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Losses\">\r\n                    L\r\n                  </TableCell>\r\n                  <TableCell onClick={statsSorting} className={classes.colHeadings} title=\"Shutouts\">\r\n                    SO\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {(rowsPerPage > 0 ? playerMap(players).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : playerMap(players)).map(\r\n                  (player) => {\r\n                    return (\r\n                      <TableRow key={player.id} className={classes.rowStyles}>\r\n                        <TableCell className={classes.stickyCol}>\r\n                          {player.name}\r\n                          {player.injury ? (\r\n                            <Chip\r\n                              size=\"small\"\r\n                              color=\"secondary\"\r\n                              label={player.injury}\r\n                              className={classes.chipStyles}\r\n                              title={player.injuryDescription}\r\n                            />\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.team}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.position}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.gamesPlayed}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.points}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.goals}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.assists}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.primaryAssists}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.powerplayGoals}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.powerplayPoints}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.shorthandedGoals}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.shorthandedPoints}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.overtimeGoals}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.shots}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.hits}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.timeOnIcePerGame}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.penaltyMinutes}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.blockedShots}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.saves}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.goalsAgainst}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.goalsAgainstAverage}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.savePercentage}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.gamesStarted}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.wins}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.losses}</TableCell>\r\n                        <TableCell className={classes.colStyles}>{player.shutouts}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  }\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TablePagination\r\n                    style={{ color: \"#eeeeee\", fontWeight: 600, display: 'flex', justifyContent: 'flex-start' }}\r\n                    className={classes.stickyColHeader}\r\n                    labelRowsPerPage=\"Rows: \"\r\n                    rowsPerPageOptions={[10, 20, 50, 75]}\r\n                    colSpan={1}\r\n                    count={players.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                      inputProps: { \"aria-label\": \"rows per page\" },\r\n                      native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                  />\r\n                </TableRow>\r\n              </TableHead>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction toiConverter(sec) {\r\n  let minutes = Math.floor(sec.stats.shifts.timeOnIceSeconds / 60 / sec.stats.gamesPlayed);\r\n  let seconds = (sec.stats.shifts.timeOnIceSeconds / sec.stats.gamesPlayed - minutes * 60).toFixed(0);\r\n  return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n}\r\n\r\nfunction TablePaginationActions({ count, page, rowsPerPage, onChangePage }) {\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{ minWidth: 500, color: \"#eeeeee\", fontWeight: 600 }}>\r\n      <Hidden mdDown>\r\n        <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n          <FirstPageIcon />\r\n        </IconButton>\r\n      </Hidden>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <Hidden mdDown>\r\n        <IconButton onClick={handleLastPageButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"last page\">\r\n          <LastPageIcon />\r\n        </IconButton>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function StandingsTabs() {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    tabBar: {\r\n      backgroundColor: \"#424242\",\r\n    },\r\n    tab: {\r\n      fontWeight: 600,\r\n      color: \"#eeeeee\",\r\n      \"&:focus\": { outline: 0 },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Tabs value={value} onChange={handleChange} className={classes.tabBar}>\r\n      <Tab\r\n        component={Link}\r\n        to=\"/standings/nhl\"\r\n        className={classes.tab}\r\n        title=\"NHL Standings\"\r\n        label=\"NHL Standings\"\r\n      />\r\n      <Tab\r\n        component={Link}\r\n        to=\"/standings/division\"\r\n        className={classes.tab}\r\n        title=\"Divisional Standings\"\r\n        label=\"Divisional Standings\"\r\n      />\r\n    </Tabs>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nexport default function NHLStandings({ standings }) {\r\n  const classes = useStyles();\r\n\r\n  const standingsRows = standings.map((team) => {\r\n    return (\r\n      <TableRow key={team.team.id} style={{ backgroundColor: \"#616161\" }}>\r\n        <TableCell className={classes.stickyCol}>\r\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <img style={{ height: 40, width: 40 }} alt={team.team.name + \" Logo\"} src={team.team.officialLogoImageSrc} />\r\n            <Hidden smDown>\r\n              {team.team.city} <Hidden mdDown>{team.team.name}</Hidden>\r\n            </Hidden>\r\n          </div>\r\n        </TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.gamesPlayed}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.wins}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.losses}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.overtimeLosses}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.points}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.pointsPercent.toFixed(3)}</TableCell>\r\n        <TableCell className={classes.colStyles}>\r\n          {team.stats.standings.wins - team.stats.standings.overtimeWins - team.stats.standings.shootoutWins}\r\n        </TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.wins - team.stats.standings.shootoutWins}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.miscellaneous.goalsFor}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.miscellaneous.goalsAgainst}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.miscellaneous.goalsFor - team.stats.miscellaneous.goalsAgainst}</TableCell>\r\n        <TableCell className={classes.colStyles}>{team.stats.standings.shootoutWins + \"-\" + team.stats.standings.shootoutLosses}</TableCell>\r\n      </TableRow>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TableContainer style={{ maxHeight: \"80vh\" }}>\r\n      <Table size=\"small\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell title=\"NHL Standings\" className={classes.stickyColHeader}>\r\n              All\r\n            </TableCell>\r\n            <TableCell title=\"Games Played\" className={classes.colHeadings}>\r\n              GP\r\n            </TableCell>\r\n            <TableCell title=\"Wins\" className={classes.colHeadings}>\r\n              W\r\n            </TableCell>\r\n            <TableCell title=\"Losses\" className={classes.colHeadings}>\r\n              L\r\n            </TableCell>\r\n            <TableCell title=\"Overtime Losses\" className={classes.colHeadings}>\r\n              OT\r\n            </TableCell>\r\n            <TableCell title=\"Points\" className={classes.colHeadings}>\r\n              PTS\r\n            </TableCell>\r\n            <TableCell title=\"Point Percentage\" className={classes.colHeadings}>\r\n              P%\r\n            </TableCell>\r\n            <TableCell title=\"Regulation Wins\" className={classes.colHeadings}>\r\n              RW\r\n            </TableCell>\r\n            <TableCell title=\"Regulation/Overtime Wins\" className={classes.colHeadings}>\r\n              ROW\r\n            </TableCell>\r\n            <TableCell title=\"Goals For\" className={classes.colHeadings}>\r\n              GF\r\n            </TableCell>\r\n            <TableCell title=\"Goals Against\" className={classes.colHeadings}>\r\n              GA\r\n            </TableCell>\r\n            <TableCell title=\"Goal Differential\" className={classes.colHeadings}>\r\n              +/-\r\n            </TableCell>\r\n            <TableCell title=\"Shootout Record\" className={classes.colHeadings}>\r\n              S/O\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{standingsRows}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  stickyCol: {\r\n    minWidth: \"100px\",\r\n    maxWidth: \"50vw\",\r\n    left: 0,\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    position: \"sticky\",\r\n    zIndex: 5,\r\n    backgroundColor: \"#424242\",\r\n    color: \"#eeeeee\",\r\n  },\r\n  colHeadings: {\r\n    color: \"#FBC02D\",\r\n  },\r\n  colStyles: {\r\n    backgroundColor: \"#616161\",\r\n    color: \"#eeeeee\",\r\n  },\r\n  stickyColHeader: {\r\n    left: 0,\r\n    zIndex: 6,\r\n    color: \"#FBC02D\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nexport default function DivisionalStandings({ standings }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const divisionTables = standings.map((division) => (\r\n    <TableContainer key={Math.random() * 1000} style={{ width: \"100%\" }}>\r\n      <Table size=\"small\" stickyHeader>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell title=\"Division\" className={classes.stickyColHeader}>\r\n              {division[0].divisionRank.divisionName}\r\n            </TableCell>\r\n            <TableCell title=\"Games Played\" className={classes.colHeadings}>\r\n              GP\r\n            </TableCell>\r\n            <TableCell title=\"Wins\" className={classes.colHeadings}>\r\n              W\r\n            </TableCell>\r\n            <TableCell title=\"Losses\" className={classes.colHeadings}>\r\n              L\r\n            </TableCell>\r\n            <TableCell title=\"Overtime Losses\" className={classes.colHeadings}>\r\n              OT\r\n            </TableCell>\r\n            <TableCell title=\"Points\" className={classes.colHeadings}>\r\n              PTS\r\n            </TableCell>\r\n            <TableCell title=\"Point Percentage\" className={classes.colHeadings}>\r\n              P%\r\n            </TableCell>\r\n            <TableCell title=\"Regulation Wins\" className={classes.colHeadings}>\r\n              RW\r\n            </TableCell>\r\n            <TableCell title=\"Regulation/Overtime Wins\" className={classes.colHeadings}>\r\n              ROW\r\n            </TableCell>\r\n            <TableCell title=\"Goals For\" className={classes.colHeadings}>\r\n              GF\r\n            </TableCell>\r\n            <TableCell title=\"Goals Against\" className={classes.colHeadings}>\r\n              GA\r\n            </TableCell>\r\n            <TableCell title=\"Goal Differential\" className={classes.colHeadings}>\r\n              +/-\r\n            </TableCell>\r\n            <TableCell title=\"Shootout Record\" className={classes.colHeadings}>\r\n              S/O\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {division.map((team) => (\r\n            <TableRow key={team.team.id}>\r\n              <TableCell className={classes.stickyCol}>\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <img style={{ height: 40, width: 40 }} alt={team.team.name + \" Logo\"} src={team.team.officialLogoImageSrc} />\r\n                  <Hidden smDown>\r\n                    {team.team.city} <Hidden mdDown>{team.team.name}</Hidden>\r\n                  </Hidden>\r\n                </div>\r\n              </TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.gamesPlayed}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.wins}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.losses}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.overtimeLosses}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.points}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.pointsPercent.toFixed(3)}</TableCell>\r\n              <TableCell className={classes.colStyles}>\r\n                {team.stats.standings.wins - team.stats.standings.overtimeWins - team.stats.standings.shootoutWins}\r\n              </TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.wins - team.stats.standings.shootoutWins}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.miscellaneous.goalsFor}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.miscellaneous.goalsAgainst}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.miscellaneous.goalsFor - team.stats.miscellaneous.goalsAgainst}</TableCell>\r\n              <TableCell className={classes.colStyles}>{team.stats.standings.shootoutWins + \"-\" + team.stats.standings.shootoutLosses}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  ));\r\n\r\n  return <>{divisionTables}</>;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  stickyCol: {\r\n    minWidth: \"100px\",\r\n    maxWidth: \"50vw\",\r\n    left: 0,\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    position: \"sticky\",\r\n    zIndex: 5,\r\n    backgroundColor: \"#424242\",\r\n    color: \"#eeeeee\",\r\n  },\r\n  colHeadings: {\r\n    color: \"#FBC02D\",\r\n  },\r\n  colStyles: {\r\n    backgroundColor: \"#616161\",\r\n    color: \"#eeeeee\",\r\n  },\r\n  stickyColHeader: {\r\n    left: 0,\r\n    zIndex: 6,\r\n    color: \"#FBC02D\",\r\n  },\r\n});\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport StandingsTabs from \"./StandingsTabs\";\r\nimport NHLStandings from \"./NHLStandings\";\r\nimport DivisionalStandings from \"./DivisionalStandings\";\r\nimport { Container, Paper } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport default function TeamStandings() {\r\n  const standingsURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/standings.json\";\r\n  let apiToken;\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    apiToken = process.env.REACT_APP_API_KEY;\r\n  } else {\r\n    apiToken = process.env.API_KEY;\r\n  }\r\n\r\n  const [allStandings, setAllStandings] = useState([]);\r\n  const [divisionalStandings, setDivisionalStandings] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const res = await axios.get(standingsURL, {\r\n        headers: {\r\n          Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n        },\r\n      });\r\n\r\n      setAllStandings(res.data.teams.slice().sort((a, b) => a.overallRank.rank - b.overallRank.rank));\r\n\r\n      let westArr = res.data.teams\r\n        .filter((item) => item.divisionRank.divisionName === \"West\")\r\n        .sort((a, b) => a.divisionRank.rank - b.divisionRank.rank);\r\n      let eastArr = res.data.teams\r\n        .filter((item) => item.divisionRank.divisionName === \"East\")\r\n        .sort((a, b) => a.divisionRank.rank - b.divisionRank.rank);\r\n      let northArr = res.data.teams\r\n        .filter((item) => item.divisionRank.divisionName === \"North\")\r\n        .sort((a, b) => a.divisionRank.rank - b.divisionRank.rank);\r\n      let centralArr = res.data.teams\r\n        .filter((item) => item.divisionRank.divisionName === \"Central\")\r\n        .sort((a, b) => a.divisionRank.rank - b.divisionRank.rank);\r\n      setDivisionalStandings([westArr, eastArr, northArr, centralArr]);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    getData();\r\n  }, [apiToken]);\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      ) : (\r\n        <Paper elevation={3}>\r\n          <StandingsTabs />\r\n          <Route path=\"/standings/nhl\">\r\n            <NHLStandings standings={allStandings} />\r\n          </Route>\r\n          <Route path=\"/standings/division\">\r\n            <DivisionalStandings standings={divisionalStandings} />\r\n          </Route>\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport default function Schedule() {\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [schedDate, setSchedDate] = useState(formatDate(setNewDate(Date.now())));\r\n  const [displayDate, setDisplayDate] = useState(setNewDate(Date.now()));\r\n  const classes = useStyles();\r\n\r\n  const scheduleURL = `https://api.mysportsfeeds.com/v2.1/pull/nhl/current/date/${schedDate}/games.json`;\r\n  const standingsURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/standings.json\";\r\n\r\n  let apiToken;\r\n  \r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    apiToken = process.env.REACT_APP_API_KEY;\r\n  } else {\r\n    apiToken = process.env.API_KEY;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      setIsLoading(true);\r\n\r\n      const teamsRes = await axios.get(standingsURL, {\r\n        headers: {\r\n          Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n        },\r\n      });\r\n\r\n      const schedRes = await axios.get(scheduleURL, {\r\n        headers: {\r\n          Authorization: \"Basic \" + btoa(`${apiToken}:MYSPORTSFEEDS`),\r\n        },\r\n      });\r\n\r\n      setTeams(teamsRes.data.teams);\r\n      setSchedule(schedRes.data.games);\r\n      console.log(schedRes.data.games);\r\n      console.log(teamsRes.data.teams);\r\n      setIsLoading(false);\r\n    };\r\n    getData();\r\n  }, [scheduleURL, apiToken]);\r\n\r\n  let schedArr = schedule.slice().map((game) => {\r\n    let homeIdx = teams.findIndex((team) => team.team.id === game.schedule.homeTeam.id);\r\n    let awayIdx = teams.findIndex((team) => team.team.id === game.schedule.awayTeam.id);\r\n    return {\r\n      gameID: game.schedule.id,\r\n      gameTime: new Date(game.schedule.startTime).toString().slice(0, 21),\r\n      homeTeamCity: teams[homeIdx].team.city || \"\",\r\n      homeTeamName: teams[homeIdx].team.name || \"\",\r\n      homeLogo: teams[homeIdx].team.officialLogoImageSrc || \"\",\r\n      homeScore: game.score.homeScoreTotal,\r\n      homeShots: game.score.homeShotsTotal,\r\n      awayTeamCity: teams[awayIdx].team.city || \"\",\r\n      awayTeamName: teams[awayIdx].team.name || \"\",\r\n      awayLogo: teams[awayIdx].team.officialLogoImageSrc || \"\",\r\n      awayScore: game.score.awayScoreTotal,\r\n      awayShots: game.score.awayShotsTotal,\r\n      currentPeriod: game.score.currentPeriod,\r\n      currentIntermission: game.score.currentIntermission,\r\n      currentPeriodTimeRemaining: secondsConverter(game.score.currentPeriodSecondsRemaining),\r\n      playedStatus: game.schedule.playedStatus,\r\n      scheduleStatus: game.schedule.scheduleStatus,\r\n      delayedOrPostponedReason: game.schedule.delayedOrPostponedReason,\r\n    };\r\n  });\r\n\r\n  const gamesList = schedArr.map((game) => (\r\n    <div key={game.gameID}>\r\n      <Paper className={classes.paper}>\r\n        <Grid container alignItems=\"center\" justify=\"center\" spacing={1}>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt={game.homeTeamName + \" Logo\"} src={game.homeLogo} />\r\n            </ButtonBase>\r\n          </Grid>\r\n          <Grid item xs={12} sm container alignContent=\"center\" alignItems=\"center\">\r\n            <Grid item xs container direction=\"column\" spacing={2} alignContent=\"center\" alignItems=\"center\">\r\n              <Grid item xs>\r\n                <Typography variant=\"subtitle1\">{new Date(game.gameTime).toDateString().slice(0, 10)}</Typography>\r\n                {game.homeScore === null ? <Typography variant=\"subtitle1\">{new Date(game.gameTime).toLocaleTimeString()}</Typography> : \"\"}\r\n                {game.homeScore !== null ? <Typography variant=\"h6\">{game.homeScore + \" - \" + game.awayScore}</Typography> : \"\"}\r\n                {game.currentPeriod !== null && game.playedStatus.slice(0, 9) !== \"COMPLETED\" ? (\r\n                  <>\r\n                    <Typography variant=\"body2\">{\"Period: \" + game.currentPeriod}</Typography>\r\n                    <Typography variant=\"body2\">{game.currentPeriodTimeRemaining}</Typography>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {game.currentIntermission !== null && game.playedStatus.slice(0, 9) !== \"COMPLETED\" ? (\r\n                  <Typography variant=\"body2\">{\"Intermission: \" + game.currentIntermission}</Typography>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {game.playedStatus.slice(0, 9) === \"COMPLETED\" ? <Typography variant=\"h6\">Final</Typography> : \"\"}\r\n                {game.scheduleStatus === \"POSTPONED\" ? (\r\n                  <>\r\n                    <Typography variant=\"body2\">{game.scheduleStatus}</Typography>\r\n                    <Typography variant=\"body2\">{game.delayedOrPostponedReason}</Typography>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonBase className={classes.image}>\r\n              <img className={classes.img} alt={game.awayTeamName + \" Logo\"} src={game.awayLogo} />\r\n            </ButtonBase>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <CircularProgress color=\"secondary\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Paper className={classes.paper}>\r\n            <form noValidate>\r\n              <TextField\r\n                color=\"secondary\"\r\n                id=\"date\"\r\n                type=\"date\"\r\n                value={displayDate}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e) => {\r\n                  setDisplayDate(e.target.value);\r\n                  setSchedDate(formatDate(e.target.value));\r\n                }}\r\n              />\r\n            </form>\r\n          </Paper>\r\n          {gamesList}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction secondsConverter(sec) {\r\n  let minutes = Math.floor(Number(sec) / 60);\r\n  let seconds = Number(sec) - minutes * 60;\r\n  return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n}\r\n\r\nfunction setNewDate(date) {\r\n  const tzOffset = new Date().getTimezoneOffset() * 60000;\r\n\r\n  return new Date(date - tzOffset).toISOString().slice(0, 10);\r\n}\r\n\r\nfunction formatDate(date) {\r\n  return date.replace(/-/g, \"\");\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  paper: {\r\n    padding: 5,\r\n    margin: \"auto\",\r\n    maxWidth: 500,\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n    color: \"#eeeeee\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n","import Navbar from \"./Components/Navbar\";\nimport StatsTable from \"./Components/StatsTable\";\nimport TeamStandings from \"./Components/TeamStandings\";\nimport Schedule from \"./Components/Schedule\";\nimport { Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Navbar key=\"Nav\" />\n      <Route path=\"/standings\">\n        <TeamStandings />\n      </Route>\n      <Route path=\"/stats\">\n        <StatsTable />\n      </Route>\n      <Route path=\"/schedule\">\n        <Schedule />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    secondary: {\n      main: yellow[700],\n    },\n  },\n});\n\nReactDOM.render(\n  <Router>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}